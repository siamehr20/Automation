# Generated by Django 3.2 on 2023-01-14 11:20

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='created time')),
                ('modified_time', models.DateTimeField(auto_now=True, verbose_name='modified time')),
                ('personal_id', models.CharField(editable=False, max_length=15, primary_key=True, serialize=False, verbose_name='personal_id')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(error_messages={'unique': 'A username with that Already exist!'}, help_text='Max Characters: 80 ', max_length=80, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator], verbose_name='username')),
                ('first_name', models.CharField(max_length=120, null=True, verbose_name='first_name')),
                ('last_name', models.CharField(max_length=120, null=True, verbose_name='last_name')),
                ('birthday', models.DateField(null=True, verbose_name='birthday')),
                ('gender', models.SmallIntegerField(choices=[(1, 'Male'), (2, 'Female'), (3, 'TransGender'), (4, 'Undefined')], null=True, verbose_name='gender')),
                ('national_id', models.BigIntegerField(null=True, verbose_name='national_id')),
                ('email', models.EmailField(max_length=254, verbose_name='Email Address')),
                ('address', models.TextField(null=True, verbose_name='address')),
                ('phone_number', models.CharField(blank=True, max_length=11, verbose_name='Phone Number')),
                ('avatar', models.ImageField(blank=True, upload_to='Employee/avatar')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date_joined')),
                ('account_status', models.BooleanField(default=True, verbose_name='is_active')),
                ('department', models.SmallIntegerField(choices=[(1, 'Administrator'), (2, 'Financial'), (3, 'Preservation'), (4, 'Tecnical'), (5, 'Procurement'), (6, 'Transport'), (7, 'Public Relation'), (8, 'Sevice')], null=True, verbose_name='دپارتمان مربوطه')),
                ('job', models.SmallIntegerField(blank=True, choices=[], null=True, verbose_name='شغل')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('account_activation_url', models.CharField(max_length=120, null=True, verbose_name='activation url')),
                ('is_active', models.BooleanField(default=False, help_text='code verification status', verbose_name='active')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Person',
                'verbose_name_plural': 'people',
                'db_table': 'employee',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
